{
  "version": 3,
  "names": [
    "useState",
    "useMemo",
    "useMapContext",
    "useEnableProperties",
    "useProperties",
    "useVisiable",
    "useEventProperties",
    "useCircle",
    "props",
    "center",
    "radius",
    "strokeColor",
    "fillColor",
    "strokeWeight",
    "strokeOpacity",
    "fillOpacity",
    "strokeStyle",
    "enableMassClear",
    "enableEditing",
    "enableClicking",
    "map",
    "circle",
    "setCircle",
    "point",
    "lng",
    "lat",
    "BMap",
    "Point",
    "opts",
    "instance",
    "Circle",
    "addOverlay"
  ],
  "sources": [
    "../src/useCircle.tsx"
  ],
  "sourcesContent": [
    "import { useState, useMemo } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useEnableProperties, useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { CircleProps } from './';\n\nexport interface UseCircle extends CircleProps {}\n\nexport function useCircle(props = {} as UseCircle) {\n  const {\n    center,\n    radius,\n    strokeColor,\n    fillColor,\n    strokeWeight,\n    strokeOpacity,\n    fillOpacity,\n    strokeStyle,\n    enableMassClear,\n    enableEditing,\n    enableClicking,\n  } = props;\n  const { map } = useMapContext();\n  const [circle, setCircle] = useState<BMap.Circle>();\n\n  useMemo(() => {\n    if (map && !circle) {\n      let point = center;\n      if (center && center.lng && center.lat) {\n        point = new BMap.Point(center.lng, center.lat);\n      }\n      const opts = {\n        strokeColor,\n        fillColor,\n        strokeWeight,\n        strokeOpacity,\n        fillOpacity,\n        strokeStyle,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n      };\n      const instance = new BMap.Circle(point, radius, opts);\n      map.addOverlay(instance);\n      setCircle(instance);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, circle]);\n\n  useVisiable(circle!, props);\n  useEventProperties<BMap.Circle, UseCircle>(circle!, props, [\n    'Click',\n    'DblClick',\n    'MouseDown',\n    'MouseUp',\n    'MouseOut',\n    'MouseOver',\n    'Remove',\n    'LineUpdate',\n  ]);\n  useEnableProperties<BMap.Circle, UseCircle>(circle!, props, ['Editing', 'MassClear']);\n  useProperties<BMap.Circle, UseCircle>(circle!, props, [\n    'Center',\n    'Radius',\n    'StrokeColor',\n    'FillColor',\n    'StrokeOpacity',\n    'FillOpacity',\n    'StrokeWeight',\n    'StrokeStyle',\n  ]);\n\n  return {\n    circle,\n    setCircle,\n  };\n}\n"
  ],
  "mappings": "AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,mBAAmB,EAAEC,aAAa,EAAEC,WAAW,EAAEC,kBAAkB,QAAQ,4BAA4B;AAKhH,OAAO,SAASC,SAAS,CAACC,KAAK,EAAoB;EAAA,IAAzBA,KAAK;IAALA,KAAK,GAAG,CAAC,CAAC;EAAA;EAClC,IAAM;IACJC,MAAM;IACNC,MAAM;IACNC,WAAW;IACXC,SAAS;IACTC,YAAY;IACZC,aAAa;IACbC,WAAW;IACXC,WAAW;IACXC,eAAe;IACfC,aAAa;IACbC;EACF,CAAC,GAAGX,KAAK;EACT,IAAM;IAAEY;EAAI,CAAC,GAAGlB,aAAa,EAAE;EAC/B,IAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,EAAe;EAEnDC,OAAO,CAAC,MAAM;IACZ,IAAImB,GAAG,IAAI,CAACC,MAAM,EAAE;MAClB,IAAIE,KAAK,GAAGd,MAAM;MAClB,IAAIA,MAAM,IAAIA,MAAM,CAACe,GAAG,IAAIf,MAAM,CAACgB,GAAG,EAAE;QACtCF,KAAK,GAAG,IAAIG,IAAI,CAACC,KAAK,CAAClB,MAAM,CAACe,GAAG,EAAEf,MAAM,CAACgB,GAAG,CAAC;MAChD;MACA,IAAMG,IAAI,GAAG;QACXjB,WAAW;QACXC,SAAS;QACTC,YAAY;QACZC,aAAa;QACbC,WAAW;QACXC,WAAW;QACXC,eAAe;QACfC,aAAa;QACbC;MACF,CAAC;MACD,IAAMU,QAAQ,GAAG,IAAIH,IAAI,CAACI,MAAM,CAACP,KAAK,EAAEb,MAAM,EAAEkB,IAAI,CAAC;MACrDR,GAAG,CAACW,UAAU,CAACF,QAAQ,CAAC;MACxBP,SAAS,CAACO,QAAQ,CAAC;IACrB;IACA;EACF,CAAC,EAAE,CAACT,GAAG,EAAEC,MAAM,CAAC,CAAC;EAEjBhB,WAAW,CAACgB,MAAM,EAAGb,KAAK,CAAC;EAC3BF,kBAAkB,CAAyBe,MAAM,EAAGb,KAAK,EAAE,CACzD,OAAO,EACP,UAAU,EACV,WAAW,EACX,SAAS,EACT,UAAU,EACV,WAAW,EACX,QAAQ,EACR,YAAY,CACb,CAAC;EACFL,mBAAmB,CAAyBkB,MAAM,EAAGb,KAAK,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;EACrFJ,aAAa,CAAyBiB,MAAM,EAAGb,KAAK,EAAE,CACpD,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,WAAW,EACX,eAAe,EACf,aAAa,EACb,cAAc,EACd,aAAa,CACd,CAAC;EAEF,OAAO;IACLa,MAAM;IACNC;EACF,CAAC;AACH"
}