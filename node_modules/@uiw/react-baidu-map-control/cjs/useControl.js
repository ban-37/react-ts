"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useControl = useControl;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactBaiduMapMap = require("@uiw/react-baidu-map-map");
var _reactBaiduMapUtils = require("@uiw/react-baidu-map-utils");
var _getControl = _interopRequireDefault(require("./getControl"));
function useControl() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _usePortal = (0, _reactBaiduMapUtils.usePortal)(),
    container = _usePortal.container,
    Portal = _usePortal.Portal;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    control = _useState2[0],
    setControl = _useState2[1];
  var offset = props.offset,
    anchor = props.anchor;
  var _useMapContext = (0, _reactBaiduMapMap.useMapContext)(),
    map = _useMapContext.map;
  (0, _react.useEffect)(function () {
    if (map && !control && container) {
      var _Control = (0, _getControl.default)();
      var instance = new _Control(container, anchor, offset);
      setControl(instance);
      map.addOverlay(instance);
    }
    return function () {
      if (map && control) {
        map.removeControl(control);
      }
    };
  }, [map, control, anchor, offset, container]);
  (0, _reactBaiduMapUtils.useVisiable)(control, props);
  (0, _reactBaiduMapUtils.useProperties)(control, props, ['Anchor', 'Offset']);
  return {
    control: control,
    ControlPortal: Portal,
    setControl: setControl
  };
}
//# sourceMappingURL=useControl.js.map