import _extends from "@babel/runtime/helpers/extends";
import React, { useImperativeHandle, Fragment } from 'react';
import { useCopyrightControl } from './useCopyrightControl';
import { CopyrightControlItem } from './Item';
import { jsx as _jsx } from "react/jsx-runtime";
export * from './Item';
export * from './useCopyrightControl';
var CopyrightControl = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    copyrightControl
  } = useCopyrightControl(props);
  useImperativeHandle(ref, () => _extends({}, props, {
    copyrightControl
  }), [copyrightControl, props]);
  return /*#__PURE__*/_jsx(Fragment, {
    children: React.Children.toArray(props.children).map((child, index) => {
      if ( /*#__PURE__*/React.isValidElement(child)) {
        return /*#__PURE__*/React.cloneElement(child, {
          control: copyrightControl,
          id: index + 1
        });
      }
      return child;
    })
  });
});
CopyrightControl.Item = CopyrightControlItem;
export default CopyrightControl;
//# sourceMappingURL=index.js.map