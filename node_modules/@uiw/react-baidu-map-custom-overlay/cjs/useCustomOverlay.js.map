{
  "version": 3,
  "names": [
    "getCustomOverlay",
    "elm",
    "position",
    "paneName",
    "map",
    "panes",
    "getPanes",
    "container",
    "style",
    "appendChild",
    "pointToOverlayPixel",
    "offset",
    "width",
    "height",
    "left",
    "x",
    "top",
    "y",
    "draw",
    "visiable",
    "display",
    "index",
    "zIndex",
    "toString",
    "BMap",
    "Overlay",
    "useCustomOverlay",
    "props",
    "children",
    "useMapContext",
    "useState",
    "customOverlay",
    "setCustomOverlay",
    "div",
    "setDiv",
    "portal",
    "setPortal",
    "count",
    "setCount",
    "useEffect",
    "removeOverlay",
    "useMemo",
    "document",
    "createElement",
    "CustomOverlay",
    "portalInstance",
    "createPortal",
    "CompOverlay",
    "addOverlay",
    "prevCount",
    "usePrevious",
    "useProperties"
  ],
  "sources": [
    "../src/useCustomOverlay.tsx"
  ],
  "sourcesContent": [
    "import { useState, useMemo, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, usePrevious } from '@uiw/react-baidu-map-utils';\nimport { CustomOverlayProps } from './';\n\nfunction getCustomOverlay() {\n  return class extends BMap.Overlay {\n    public container: HTMLDivElement;\n    public map!: BMap.Map;\n    public paneName: keyof BMap.MapPanes;\n    public position?: BMap.Point;\n    public offset?: BMap.Size;\n    constructor(elm: HTMLDivElement, position?: BMap.Point, paneName?: CustomOverlayProps['paneName']) {\n      super();\n      this.container = elm;\n      this.paneName = paneName || 'markerPane';\n      this.position = position;\n    }\n    public initialize: (map: BMap.Map) => HTMLElement = (map) => {\n      const panes = map.getPanes();\n      this.container.style.position = 'absolute';\n      this.map = map;\n      panes[this.paneName]!.appendChild(this.container);\n      return this.container;\n    };\n    public draw = () => {\n      if (this.position == null || this.map == null) {\n        return;\n      }\n      const position = this.map.pointToOverlayPixel(this.position);\n      const { width = 0, height = 0 } = this.offset || {};\n\n      this.container.style.left = `${position.x + width}px`;\n      this.container.style.top = `${position.y + height}px`;\n    };\n    public setOffset = (offset: BMap.Size) => {\n      this.offset = offset;\n      this.draw();\n    };\n    public setPosition = (position: BMap.Point) => {\n      this.position = position;\n      this.draw();\n    };\n    public setVisiable = (visiable: boolean) => {\n      this.container.style.display = visiable ? 'block' : 'none';\n    };\n\n    public getPosition = () => {\n      return this.position;\n    };\n\n    public setZIndex = (index: number) => {\n      this.container.style.zIndex = index.toString();\n    };\n  };\n}\n\nexport interface UseCustomOverlay extends CustomOverlayProps {}\n\nexport function useCustomOverlay(props = {} as UseCustomOverlay) {\n  const { children, paneName, position } = props;\n  const { map } = useMapContext();\n  const [customOverlay, setCustomOverlay] = useState<BMap.Overlay>();\n  const [div, setDiv] = useState<HTMLDivElement>();\n  const [portal, setPortal] = useState<React.ReactPortal>();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    return () => {\n      if (map && customOverlay) {\n        map.removeOverlay(customOverlay);\n      }\n    };\n  }, [customOverlay, map]);\n  useMemo(() => {\n    if (map && !portal && document) {\n      const elm = document.createElement('div');\n      const CustomOverlay = getCustomOverlay();\n      const portalInstance = createPortal(children, elm);\n      const CompOverlay = new CustomOverlay(elm, position, paneName);\n      setCount(count + 1);\n      setDiv(elm);\n      map.addOverlay(CompOverlay);\n      setPortal(portalInstance);\n      setCustomOverlay(CompOverlay);\n    }\n  }, [children, count, map, paneName, portal, position]);\n\n  const prevCount = usePrevious(count);\n  useMemo(() => {\n    if (map && div && children && count === prevCount) {\n      const portalInstance = createPortal(children, div);\n      setPortal(portalInstance);\n      setCount(count + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children, customOverlay]);\n\n  useProperties<BMap.Overlay, UseCustomOverlay>(customOverlay!, props, ['ZIndex', 'Offset', 'Position', 'Visiable']);\n  return {\n    portal,\n    setPortal,\n    customOverlay,\n    setCustomOverlay,\n  };\n}\n"
  ],
  "mappings": "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"
}