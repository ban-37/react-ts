{
  "version": 3,
  "names": [
    "useState",
    "useMemo",
    "useEffect",
    "createPortal",
    "useMapContext",
    "useProperties",
    "usePrevious",
    "getCustomOverlay",
    "BMap",
    "Overlay",
    "constructor",
    "elm",
    "position",
    "paneName",
    "container",
    "map",
    "offset",
    "initialize",
    "panes",
    "getPanes",
    "style",
    "appendChild",
    "draw",
    "pointToOverlayPixel",
    "width",
    "height",
    "left",
    "x",
    "top",
    "y",
    "setOffset",
    "setPosition",
    "setVisiable",
    "visiable",
    "display",
    "getPosition",
    "setZIndex",
    "index",
    "zIndex",
    "toString",
    "useCustomOverlay",
    "props",
    "children",
    "customOverlay",
    "setCustomOverlay",
    "div",
    "setDiv",
    "portal",
    "setPortal",
    "count",
    "setCount",
    "removeOverlay",
    "document",
    "createElement",
    "CustomOverlay",
    "portalInstance",
    "CompOverlay",
    "addOverlay",
    "prevCount"
  ],
  "sources": [
    "../src/useCustomOverlay.tsx"
  ],
  "sourcesContent": [
    "import { useState, useMemo, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, usePrevious } from '@uiw/react-baidu-map-utils';\nimport { CustomOverlayProps } from './';\n\nfunction getCustomOverlay() {\n  return class extends BMap.Overlay {\n    public container: HTMLDivElement;\n    public map!: BMap.Map;\n    public paneName: keyof BMap.MapPanes;\n    public position?: BMap.Point;\n    public offset?: BMap.Size;\n    constructor(elm: HTMLDivElement, position?: BMap.Point, paneName?: CustomOverlayProps['paneName']) {\n      super();\n      this.container = elm;\n      this.paneName = paneName || 'markerPane';\n      this.position = position;\n    }\n    public initialize: (map: BMap.Map) => HTMLElement = (map) => {\n      const panes = map.getPanes();\n      this.container.style.position = 'absolute';\n      this.map = map;\n      panes[this.paneName]!.appendChild(this.container);\n      return this.container;\n    };\n    public draw = () => {\n      if (this.position == null || this.map == null) {\n        return;\n      }\n      const position = this.map.pointToOverlayPixel(this.position);\n      const { width = 0, height = 0 } = this.offset || {};\n\n      this.container.style.left = `${position.x + width}px`;\n      this.container.style.top = `${position.y + height}px`;\n    };\n    public setOffset = (offset: BMap.Size) => {\n      this.offset = offset;\n      this.draw();\n    };\n    public setPosition = (position: BMap.Point) => {\n      this.position = position;\n      this.draw();\n    };\n    public setVisiable = (visiable: boolean) => {\n      this.container.style.display = visiable ? 'block' : 'none';\n    };\n\n    public getPosition = () => {\n      return this.position;\n    };\n\n    public setZIndex = (index: number) => {\n      this.container.style.zIndex = index.toString();\n    };\n  };\n}\n\nexport interface UseCustomOverlay extends CustomOverlayProps {}\n\nexport function useCustomOverlay(props = {} as UseCustomOverlay) {\n  const { children, paneName, position } = props;\n  const { map } = useMapContext();\n  const [customOverlay, setCustomOverlay] = useState<BMap.Overlay>();\n  const [div, setDiv] = useState<HTMLDivElement>();\n  const [portal, setPortal] = useState<React.ReactPortal>();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    return () => {\n      if (map && customOverlay) {\n        map.removeOverlay(customOverlay);\n      }\n    };\n  }, [customOverlay, map]);\n  useMemo(() => {\n    if (map && !portal && document) {\n      const elm = document.createElement('div');\n      const CustomOverlay = getCustomOverlay();\n      const portalInstance = createPortal(children, elm);\n      const CompOverlay = new CustomOverlay(elm, position, paneName);\n      setCount(count + 1);\n      setDiv(elm);\n      map.addOverlay(CompOverlay);\n      setPortal(portalInstance);\n      setCustomOverlay(CompOverlay);\n    }\n  }, [children, count, map, paneName, portal, position]);\n\n  const prevCount = usePrevious(count);\n  useMemo(() => {\n    if (map && div && children && count === prevCount) {\n      const portalInstance = createPortal(children, div);\n      setPortal(portalInstance);\n      setCount(count + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children, customOverlay]);\n\n  useProperties<BMap.Overlay, UseCustomOverlay>(customOverlay!, props, ['ZIndex', 'Offset', 'Position', 'Visiable']);\n  return {\n    portal,\n    setPortal,\n    customOverlay,\n    setCustomOverlay,\n  };\n}\n"
  ],
  "mappings": "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"
}