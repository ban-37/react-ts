"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGroundOverlay = useGroundOverlay;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactBaiduMapMap = require("@uiw/react-baidu-map-map");
var _reactBaiduMapUtils = require("@uiw/react-baidu-map-utils");
function useGroundOverlay() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    groundOverlay = _useState2[0],
    setGroundOverlay = _useState2[1];
  var bounds = props.bounds,
    opacity = props.opacity,
    imageURL = props.imageURL,
    displayOnMinLevel = props.displayOnMinLevel,
    displayOnMaxLevel = props.displayOnMaxLevel;
  var _useMapContext = (0, _reactBaiduMapMap.useMapContext)(),
    map = _useMapContext.map;
  (0, _react.useEffect)(function () {
    if (!groundOverlay && bounds && map) {
      var instance = new BMap.GroundOverlay(bounds, {
        opacity: opacity,
        imageURL: imageURL,
        displayOnMinLevel: displayOnMinLevel,
        displayOnMaxLevel: displayOnMaxLevel
      });
      map.addOverlay(instance);
      setGroundOverlay(instance);
      return function () {
        if (map && instance) {
          map.removeOverlay(instance);
        }
      };
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [map]);
  (0, _reactBaiduMapUtils.useVisiable)(groundOverlay, props);
  (0, _reactBaiduMapUtils.useEventProperties)(groundOverlay, props, ['Click', 'DblClick']);
  (0, _reactBaiduMapUtils.useProperties)(groundOverlay, props, ['Bounds', 'Opacity', 'ImageURL', 'DisplayOnMinLevel', 'DispalyOnMaxLevel']);
  return {
    groundOverlay: groundOverlay,
    setGroundOverlay: setGroundOverlay
  };
}
//# sourceMappingURL=useGroundOverlay.js.map