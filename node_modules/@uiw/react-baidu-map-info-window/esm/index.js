import _extends from "@babel/runtime/helpers/extends";
import React, { Fragment, useEffect, useImperativeHandle } from 'react';
import { useInfoWindow } from './useInfoWindow';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export * from './useInfoWindow';
export default /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    infoWindow,
    setIsOpen,
    Portal,
    PortalTitle
  } = useInfoWindow(props);
  useEffect(() => setIsOpen(props.isOpen), [props.isOpen, setIsOpen]);
  useImperativeHandle(ref, () => _extends({}, props, {
    infoWindow
  }));
  return /*#__PURE__*/_jsxs(Fragment, {
    children: [/*#__PURE__*/_jsx(Portal, {
      children: props.children
    }), /*#__PURE__*/_jsx(PortalTitle, {
      children: props.title
    })]
  });
});
//# sourceMappingURL=index.js.map