/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="@uiw/react-baidu-map-types" />
/// <reference types="react" />
import { MapProps } from './';
export interface OverlayProps extends MapChildProps {
    /**
     * 覆盖物是否可见
     */
    visiable?: boolean;
}
/**
 * 此类型是 `<Map>` 组件传递给子组件(如 `<Marker>`)的两个 `props`
 */
export interface MapChildProps {
    /**
     * 地图API的核心类，SDK加载完成才有
     */
    BMap?: typeof BMap;
    /**
     * 实例化后的地图对象
     */
    map?: BMap.Map;
}
export interface UseMap extends MapProps, MapChildProps {
}
export declare function useMap(props?: UseMap): {
    map: BMap.Map | undefined;
    setMap: import("react").Dispatch<import("react").SetStateAction<BMap.Map | undefined>>;
    zoom: number;
    setZoom: import("react").Dispatch<import("react").SetStateAction<number>>;
    container: HTMLDivElement | null | undefined;
    setContainer: import("react").Dispatch<import("react").SetStateAction<HTMLDivElement | null | undefined>>;
    center: string | BMap.Point;
    setCenter: import("react").Dispatch<import("react").SetStateAction<string | BMap.Point>>;
    autoLocalCity: boolean | undefined;
    setAutoLocalCity: import("react").Dispatch<import("react").SetStateAction<boolean | undefined>>;
};
