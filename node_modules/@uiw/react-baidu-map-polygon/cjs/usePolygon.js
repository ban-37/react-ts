"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePolygon = usePolygon;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactBaiduMapMap = require("@uiw/react-baidu-map-map");
var _reactBaiduMapUtils = require("@uiw/react-baidu-map-utils");
function usePolygon() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var strokeColor = props.strokeColor,
    fillColor = props.fillColor,
    strokeWeight = props.strokeWeight,
    strokeOpacity = props.strokeOpacity,
    fillOpacity = props.fillOpacity,
    strokeStyle = props.strokeStyle,
    enableMassClear = props.enableMassClear,
    enableEditing = props.enableEditing,
    enableClicking = props.enableClicking;
  var _useMapContext = (0, _reactBaiduMapMap.useMapContext)(),
    map = _useMapContext.map;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    polygon = _useState2[0],
    setPolygon = _useState2[1];
  var _useState3 = (0, _react.useState)(props.path || []),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    path = _useState4[0],
    setPath = _useState4[1];
  var opts = {
    strokeColor: strokeColor,
    fillColor: fillColor,
    strokeWeight: strokeWeight,
    strokeOpacity: strokeOpacity,
    fillOpacity: fillOpacity,
    strokeStyle: strokeStyle,
    enableMassClear: enableMassClear,
    enableEditing: enableEditing,
    enableClicking: enableClicking
  };
  (0, _react.useEffect)(function () {
    if (!BMap || !map) return _reactBaiduMapUtils.noop;
    var points = (path || []).map(function (item) {
      return new BMap.Point(item.lng, item.lat);
    });
    var instance = new BMap.Polygon(points, opts);
    map.addOverlay(instance);
    setPolygon(instance);
    return function () {
      map.removeOverlay(instance);
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [map]);
  (0, _react.useEffect)(function () {
    if (path && polygon) {
      var points = path.map(function (item) {
        return new BMap.Point(item.lng, item.lat);
      });
      polygon.setPath(points);
    }
  }, [polygon, path]);
  (0, _reactBaiduMapUtils.useVisiable)(polygon, props);
  (0, _reactBaiduMapUtils.useEventProperties)(polygon, props, ['Click', 'DoubleClick', 'MouseDown', 'MouseUp', 'MouseOut', 'MouseOver', 'Remove', 'LineUpdate']);
  (0, _reactBaiduMapUtils.useEnableProperties)(polygon, props, ['Editing', 'MassClear']);
  // PositionAt
  (0, _reactBaiduMapUtils.useProperties)(polygon, props, ['StrokeColor', 'StrokeOpacity', 'FillColor', 'FillOpacity', 'StrokeWeight', 'StrokeStyle']);
  return {
    polygon: polygon,
    setPolygon: setPolygon,
    path: path,
    setPath: setPath
  };
}
//# sourceMappingURL=usePolygon.js.map