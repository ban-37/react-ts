"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTileLayer = useTileLayer;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactBaiduMapMap = require("@uiw/react-baidu-map-map");
/**
 * https://lbsyun.baidu.com/jsdemo.htm#g0_2
 */
function useTileLayer() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    tileLayer = _useState2[0],
    setTileLayer = _useState2[1];
  var _props$transparentPng = props.transparentPng,
    transparentPng = _props$transparentPng === void 0 ? true : _props$transparentPng,
    tileUrlTemplate = props.tileUrlTemplate,
    copyright = props.copyright,
    zIndex = props.zIndex;
  var _useMapContext = (0, _reactBaiduMapMap.useMapContext)(),
    map = _useMapContext.map;
  (0, _react.useEffect)(function () {
    if (map && !tileLayer) {
      var instance = new BMap.TileLayer({
        transparentPng: transparentPng,
        tileUrlTemplate: tileUrlTemplate,
        copyright: copyright,
        zIndex: zIndex
      });
      if (!!props.getTilesUrl) {
        instance.getTilesUrl = props.getTilesUrl;
      }
      if (!!props.getCopyright) {
        instance.getCopyright = props.getCopyright;
      }
      map.addTileLayer(instance);
      setTileLayer(instance);
      return function () {
        if (instance) {
          map.removeTileLayer(instance);
        }
      };
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [map]);
  var _useState3 = (0, _react.useState)(props.visiable),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    visiable = _useState4[0],
    setVisiable = _useState4[1];
  (0, _react.useEffect)(function () {
    if (map && tileLayer) {
      visiable ? map.addTileLayer(tileLayer) : map.removeTileLayer(tileLayer);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [visiable, map]);
  return {
    tileLayer: tileLayer,
    setTileLayer: setTileLayer,
    visiable: visiable,
    setVisiable: setVisiable
  };
}
//# sourceMappingURL=useTileLayer.js.map